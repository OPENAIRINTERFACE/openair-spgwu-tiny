--- 
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata: 
  name: oai-upf
spec: 
  output: 
    to: 
      kind: ImageStreamTag
      name: "oai-upf:oai-oc"
  runPolicy: Serial
  strategy:
    type: Docker
  source: 
    secrets: 
      - destinationDir: etc-pki-entitlement
        secret: 
          name: etc-pki-entitlement
    configMaps: 
      - configMap: 
          name: rhsm-conf
        destinationDir: rhsm-conf
      - configMap: 
          name: rhsm-ca
        destinationDir: rhsm-ca
    dockerfile: |
            ################################################################
            # Target Image
            ################################################################
            FROM image-registry.openshift-image-registry.svc:5000/oai4g/oai-upf-dev:oai-oc as oai-upf-dev
            FROM registry.access.redhat.com/ubi8/ubi:latest as spgwu

            ENV TZ=Europe/Paris

            # We install some debug tools for the moment in addition of mandatory libraries
            RUN yum update -y && \
                yum -y install --enablerepo="ubi-8-codeready-builder" \
                  tzdata \
                  procps-ng \
                  psmisc \
                  net-tools \
                  ethtool \
                  iproute \
                  iptables \
                  initscripts \
                  libevent && \
                yum clean all -y && \
                rm -rf /var/cache/yum /var/cache/dnf

            # Copying executable and generated libraries
            WORKDIR /oai-upf/bin
            COPY --from=oai-upf-dev \
                /oai-upf/build/upf/build/oai_upf \
                /oai-upf/scripts/entrypoint.sh \
                ./
            
            # Copying installed libraries from builder
            COPY --from=oai-upf-dev \
                /lib64/libgflags.so.2.1 \
                /lib64/libglog.so.0 \
                /lib64/libdouble-conversion.so.1 \
                /lib64/libconfig++.so.9 \
                /lib64/libboost_system.so.1.66.0 \
                /lib64/
            RUN ldconfig && \
                ldd /oai-upf/bin/oai_upf
            
            # Copying template configuration files
            # The configuration folder will be flat
            WORKDIR /oai-upf/etc
            COPY --from=oai-upf-dev /oai-upf/etc/upf.conf .
            
            WORKDIR /openair-spgwu-tiny
            
            # expose ports
            EXPOSE 2152/udp 8805/udp
            
            CMD ["/oai-upf/bin/oai_upf", "-c", "/oai-upf/etc/upf.conf", "-o"]
            ENTRYPOINT ["/oai-upf/bin/entrypoint.sh"]
